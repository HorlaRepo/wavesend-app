/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { addBankAccount } from '../fn/bank-account-controller/add-bank-account';
import { AddBankAccount$Params } from '../fn/bank-account-controller/add-bank-account';
import { ApiResponseBankAccount } from '../models/api-response-bank-account';
import { ApiResponseListBankAccount } from '../models/api-response-list-bank-account';
import { ApiResponseLong } from '../models/api-response-long';
import { ApiResponseString } from '../models/api-response-string';
import { deleteBankAccount } from '../fn/bank-account-controller/delete-bank-account';
import { DeleteBankAccount$Params } from '../fn/bank-account-controller/delete-bank-account';
import { getBankAccountByAccountNumber } from '../fn/bank-account-controller/get-bank-account-by-account-number';
import { GetBankAccountByAccountNumber$Params } from '../fn/bank-account-controller/get-bank-account-by-account-number';
import { getBankAccountCountByUserId } from '../fn/bank-account-controller/get-bank-account-count-by-user-id';
import { GetBankAccountCountByUserId$Params } from '../fn/bank-account-controller/get-bank-account-count-by-user-id';
import { getBankAccountsByUser } from '../fn/bank-account-controller/get-bank-accounts-by-user';
import { GetBankAccountsByUser$Params } from '../fn/bank-account-controller/get-bank-accounts-by-user';

@Injectable({ providedIn: 'root' })
export class BankAccountControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getBankAccountsByUser()` */
  static readonly GetBankAccountsByUserPath = '/bank-account';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getBankAccountsByUser()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountsByUser$Response(params?: GetBankAccountsByUser$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponseListBankAccount>> {
    return getBankAccountsByUser(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getBankAccountsByUser$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountsByUser(params?: GetBankAccountsByUser$Params, context?: HttpContext): Observable<ApiResponseListBankAccount> {
    return this.getBankAccountsByUser$Response(params, context).pipe(
      map((r: StrictHttpResponse<ApiResponseListBankAccount>): ApiResponseListBankAccount => r.body)
    );
  }

  /** Path part for operation `addBankAccount()` */
  static readonly AddBankAccountPath = '/bank-account';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `addBankAccount()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  addBankAccount$Response(params: AddBankAccount$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponseBankAccount>> {
    return addBankAccount(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `addBankAccount$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  addBankAccount(params: AddBankAccount$Params, context?: HttpContext): Observable<ApiResponseBankAccount> {
    return this.addBankAccount$Response(params, context).pipe(
      map((r: StrictHttpResponse<ApiResponseBankAccount>): ApiResponseBankAccount => r.body)
    );
  }

  /** Path part for operation `getBankAccountByAccountNumber()` */
  static readonly GetBankAccountByAccountNumberPath = '/bank-account/{accountNumber}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getBankAccountByAccountNumber()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountByAccountNumber$Response(params: GetBankAccountByAccountNumber$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponseBankAccount>> {
    return getBankAccountByAccountNumber(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getBankAccountByAccountNumber$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountByAccountNumber(params: GetBankAccountByAccountNumber$Params, context?: HttpContext): Observable<ApiResponseBankAccount> {
    return this.getBankAccountByAccountNumber$Response(params, context).pipe(
      map((r: StrictHttpResponse<ApiResponseBankAccount>): ApiResponseBankAccount => r.body)
    );
  }

  /** Path part for operation `getBankAccountCountByUserId()` */
  static readonly GetBankAccountCountByUserIdPath = '/bank-account/count';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getBankAccountCountByUserId()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountCountByUserId$Response(params?: GetBankAccountCountByUserId$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponseLong>> {
    return getBankAccountCountByUserId(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getBankAccountCountByUserId$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getBankAccountCountByUserId(params?: GetBankAccountCountByUserId$Params, context?: HttpContext): Observable<ApiResponseLong> {
    return this.getBankAccountCountByUserId$Response(params, context).pipe(
      map((r: StrictHttpResponse<ApiResponseLong>): ApiResponseLong => r.body)
    );
  }

  /** Path part for operation `deleteBankAccount()` */
  static readonly DeleteBankAccountPath = '/bank-account/{bankAccountId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `deleteBankAccount()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteBankAccount$Response(params: DeleteBankAccount$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponseString>> {
    return deleteBankAccount(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `deleteBankAccount$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteBankAccount(params: DeleteBankAccount$Params, context?: HttpContext): Observable<ApiResponseString> {
    return this.deleteBankAccount$Response(params, context).pipe(
      map((r: StrictHttpResponse<ApiResponseString>): ApiResponseString => r.body)
    );
  }

}
